Head Over Heels reverse engineering
===================================

This is my attempt to reverse engineer the ZX Spectrum version of Head
Over Heels. I made a start before, but this time I'm trying to keep
some more notes, script it, source control it, etc. so that I've got a
better hope of tracking it all.

Contents
========

Assembly files
--------------

HOH.asm             The dissassembly of Head Over Heels

data_header.asm     The data before the main code section
data_trailer.asm    The data after the main code section

equs.asm       	    Nasty hack providing symbols for various addresses
        	    and constants

sound.asm	    48K sound production

blit_mask.asm	    Masked blit into an offscreen buffer
blit_rot.asm	    Blit with rotation into offscreen buffer
blit_screen.asm	    Copy sprite from buffer to screen

print_char.asm	    Text-printing functions

menus.asm	    Menu-related stuff. Includes main strings table.

attr_scheme.asm	    Attribute colour schemes
controls.asm	    Controls configuration and reading
controls2.asm	    More controls-reading code
sprite_stuff.asm    FIXME: Sprite odds and ends
screen_bits.asm	    FIXME: More screen/sprite bits
get_sprite.asm	    Given a sprite index, return pointers to the data

status.asm	    Counts for lives etc.

Binary files
------------

screen.scr	    The screen buffer

img_2x24.bin	    16x24 sprites
img_3x24.bin	    24x24 sprites
img_3x32.bin	    24x32 sprites
img_3x56.bin	    24x56 sprites
img_4x28.bin	    32x28 sprites
img_chars.bin	    Font

panels.asm	    The wall panel images. Should probably be
		    converted to a .bin

Miscellaneous other
-------------------

check.sh	    Script to assemble HOH.asm and check it against
		    the baseline.

tape/		    This directory holds my attempts to extract the
                    contents from a tzx file. Somewhat abortive
                    effort.

memimage/	    This holds a memory dump from the game on
                    start-up, plus tools to extract and disassemble
                    the dump, creating a baseline disassembly.

graphics/	    Tools to extract the images from the binary files which
                    hold them.
